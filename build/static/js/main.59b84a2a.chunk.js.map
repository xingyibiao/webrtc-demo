{"version":3,"sources":["userInfo.ts","views/login/Login.tsx","services/iceServe.ts","services/config.ts","views/home/Index.tsx","services/webrtc.service.ts","services/event.type.ts","views/room/room.tsx","serviceWorker.ts","index.tsx","router.tsx"],"names":["UserInfo","info","userName","roomName","userInfo","localStorage","getItem","JSON","parse","this","setInfo","e","console","error","instance","setItem","stringify","UserInfoInstance","getInstance","Login","useState","setUserName","setRoomName","history","useHistory","className","value","placeholder","prefix","type","onChange","target","onClick","push","window","location","reload","urls","credential","username","process","SOCKET_URL","REACT_APP_SOCKET_URL","SOCKET_PATH","NODE_ENV","socket","io","path","forceNew","reconnection","transports","isAddWsListener","isAddRtcListener","localMsgList","App","getInfo","replace","videoRef","useRef","remoteVideoRef","chatHeight","setChatHeight","chatWidth","setChatWidth","chatMsgList","setChatMsgList","chatMsg","setChatMsg","onCalling","setOnCalling","handlerWinResize","container$","document","querySelector","getBoundingClientRect","height","width","addEventListener","useEffect","log","removeEventListener","localStream","remoteStream","isPublisher","hasPublish","rtc","RTCPeerConnection","iceServers","createOffer","a","offer","sdp","setLocalDescription","emit","createAnswer","answer","publishStream","getTracks","forEach","track","addTrack","video$","current","streams","srcObject","candidate","on","sender","data","setRemoteDescription","addIceCandidate","signalingState","ref","autoPlay","muted","id","rowHeight","rowCount","rowRenderer","key","index","style","onKeyDown","navigator","mediaDevices","getUserMedia","audio","video","then","catch","disabled","DefaultContainerStyle","RTCClient","container","constraints","containerStyle","localVideo$","remoteVideo$","hasInit","agreeCall","receiveSap","Object","assign","clientInstance","options","socketOptions","url","socketUrl","config","rtcConfig","createElement","setAttribute","background","position","bottom","right","appendChild","initContainer","Promise","resolve","reject","connectionState","addSocketListener","addRtcListener","success","initLocalStream","stream","err","close","resetState","emitter","isInit","Room","useParams","modalVisible","setModalVisible","callName","setCallName","callDisable","setCallDisable","videoWrapRef$","closeModal","WebRtcService","getClientInstance","init","addListener","name","destroy","login","call","visible","onOk","agree","onCancel","Boolean","hostname","match","ReactDOM","render","component","Index","exact","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"2SAKMA,E,WAaL,aAAe,yBAVPC,KAAa,CACpBC,SAAU,GACVC,SAAU,IASV,IAAMC,EAAWC,aAAaC,QAAQ,YACtC,GAAIF,EACH,IACC,IAAMH,EAAOM,KAAKC,MAAMJ,GACxBK,KAAKC,QAAQT,GACZ,MAAOU,GACRC,QAAQC,MAAM,iE,+DAVhB,OADKb,EAASc,WAAUd,EAASc,SAAW,IAAId,GACzCA,EAASc,a,6CAeTb,GACPQ,KAAKR,KAAOA,EACZI,aAAaU,QAAQ,WAAYR,KAAKS,UAAUf,M,gCAIhD,OAAOQ,KAAKR,S,KA/BRD,EACEc,c,EAkCR,IAEeG,EAFUjB,EAASkB,c,iCCAnBC,G,OAjCS,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACtBlB,EADsB,KACZmB,EADY,OAEGD,mBAAS,IAFZ,mBAEtBjB,EAFsB,KAEZmB,EAFY,KAGvBC,EAAUC,cAYhB,OACC,yBAAKC,UAAU,SACd,yBAAKA,UAAU,aACd,gEACA,yBAAKA,UAAU,cACd,kBAAC,IAAD,CAAOC,MAAOxB,EAAUyB,YAAY,uCAASC,OAAQ,kBAAC,IAAD,CAAMC,KAAK,SAAWC,SAAU,SAACnB,GAAD,OAAOU,EAAYV,EAAEoB,OAAOL,WAElH,yBAAKD,UAAU,cACd,kBAAC,IAAD,CAAOC,MAAOvB,EAAUwB,YAAY,uCAASC,OAAQ,kBAAC,IAAD,CAAMC,KAAK,SAAUC,SAAU,SAACnB,GAAD,OAAOW,EAAYX,EAAEoB,OAAOL,WAEjH,yBAAKD,UAAU,cACd,kBAAC,IAAD,CAAQI,KAAK,UAAUG,QArB3B,WACM9B,GAAaC,IAClBH,EAASU,QAAQ,CAChBR,WACAC,aAEDoB,EAAQU,KAAR,gBAAsB9B,IACtB+B,OAAOC,SAASC,YAcb,qB,4DCjCU,G,OAAA,CACd,CAACC,KAAK,4BACN,CAACA,KAAK,uBACN,CAACA,KAAK,wBACN,CAACA,KAAK,yBACN,CAACA,KAAK,uBACN,CAACA,KAAK,2BACN,CAACA,KAAK,wBACN,CAACA,KAAK,gCACN,CAACA,KAAK,iCACN,CAACA,KAAK,iCACN,CAACA,KAAK,iCACN,CAACA,KAAK,iCACN,CAACA,KAAK,uBACN,CAACA,KAAK,0BACN,CAACA,KAAK,4BACN,CAACA,KAAK,4BACN,CAACA,KAAK,2BACN,CAACA,KAAK,2BACN,CAACA,KAAK,sBACN,CACCA,KAAM,wBACNC,WAAY,SACZC,SAAU,mBAEX,CACCF,KAAM,wCACNC,WAAY,+BACZC,SAAU,uBAEX,CACCF,KAAM,wCACNC,WAAY,+BACZC,SAAU,yB,ECjCsCC,qGAErCC,E,EAFEC,sBAEmC,GAErCC,EAA2B,e,EAJHC,SAIkB,kBAAoB,aCiBrEC,EAASC,IAAGL,EAAY,CAC5BM,KAAMJ,EACNK,UAAU,EACVC,cAAc,EACdC,WAAY,CAAC,eAGXC,GAA2B,EAC3BC,GAA4B,EAE5BC,EAAyB,GAoPdC,EAlPO,WACpB,IAAM/B,EAAUC,cADU,EAEKxB,EAASuD,UAAhCrD,EAFkB,EAElBA,SAAUC,EAFQ,EAERA,SAEbD,GACHqB,EAAQiC,QAAQ,UAElB,IAAMC,EAAWC,iBAAyB,MACpCC,EAAiBD,iBAAyB,MARtB,EASMtC,mBAAS,IATf,gCAUUA,mBAAS,IAVnB,mBAUnBwC,EAVmB,KAUPC,EAVO,OAWQzC,mBAAS,GAXjB,mBAWnB0C,EAXmB,KAWRC,EAXQ,OAYY3C,oBAAmB,kBAAMiC,KAZrC,mBAYnBW,EAZmB,KAYNC,EAZM,OAaI7C,mBAAS,IAbb,mBAanB8C,EAbmB,KAaVC,EAbU,OAcQ/C,oBAAS,GAdjB,mBAcnBgD,EAdmB,KAcRC,EAdQ,KAiB1B,SAASC,IACP,IAAMC,EAAaC,SAASC,cAA8B,eAC1D,GAAKF,EAAL,CAF0B,MAGAA,EAAWG,wBAA7BC,EAHkB,EAGlBA,OAAQC,EAHU,EAGVA,MAChBf,EAAcc,GACdZ,EAAaa,IAEf1C,OAAO2C,iBAAiB,SAAUP,GAClCQ,qBAAU,WAGR,OAFAlE,QAAQmE,IAAI,UACZT,IACO,kBAAMpC,OAAO8C,oBAAoB,SAAUV,MACjD,CAACnE,IAEJ,IAAI8E,EAAkC,KAElCC,EAAmC,KAEnCC,GAAuB,EAEvBC,GAAsB,EAEpBC,EAAM,IAAIC,kBAAkB,CAChCC,eAxCwB,SAqGXC,IArGW,2EAqG1B,4BAAAC,EAAA,0DACML,EADN,0EAGwBC,EAAIG,cAH5B,UAGUE,EAHV,OAIIN,GAAa,GACTM,EAAMC,IALd,kCAMYN,EAAIO,oBAAoBF,GANpC,QAOM7C,EAAOgD,KAAK,WAAYH,GAP9B,0DAUI9E,QAAQC,MAAR,MAVJ,2DArG0B,+BAmHXiF,IAnHW,2EAmH1B,4BAAAL,EAAA,0DACML,EADN,0EAGyBC,EAAIS,eAH7B,UAGUC,EAHV,OAIIX,GAAa,GACTW,EAAOJ,IALf,kCAMYN,EAAIO,oBAAoBG,GANpC,QAOMlD,EAAOgD,KAAK,WAAYE,GAP9B,0DAUInF,QAAQC,MAAR,MAVJ,2DAnH0B,+BAwKXmF,KAxKW,8EAwK1B,sBAAAP,EAAA,yDACOR,EADP,oDAEEA,EAAYgB,YAAYC,SAAQ,SAAAC,GACzBlB,GACLI,EAAIe,SAASD,EAAOlB,OAElBE,EANN,gCAOUK,IAPV,+CASUM,IATV,6CAxK0B,oEAqL1B,sBAAAL,EAAA,6DACEN,GAAc,EADhB,SAEQa,KAFR,OAGEnD,EAAOgD,KAAK,QAHd,4CArL0B,sBAqM1B,OAzJMzC,IACJA,GAAmB,EACnBiC,EAAIR,iBAAiB,SAAS,SAAAlE,GAC5B,IAAM0F,EAAS1C,EAAe2C,QAC9BpB,EAAevE,EAAE4F,QAAQ,GACrBF,GAAUA,EAAOG,YAAc7F,EAAE4F,QAAQ,KAC3CF,EAAOG,UAAYtB,MAIvBG,EAAIR,iBAAiB,gBAAgB,SAAAlE,GACnCkC,EAAOgD,KAAK,YAAalF,EAAE8F,eAKzBtD,IACJA,GAAkB,EAClBN,EAAO6D,GAAG,WAAV,uCAAsB,WAAO/F,GAAP,iBAAA8E,EAAA,yDACZkB,EAAiBhG,EAAjBgG,OAAQC,EAASjG,EAATiG,KAChBhG,QAAQmE,IAAI,kBAASpE,GACjBgG,IAAWzG,EAHK,iEAIdmF,EAAIwB,qBAAqBD,GAJX,2CAAtB,uDAOA/D,EAAO6D,GAAG,YAAV,uCAAuB,WAAO/F,GAAP,iBAAA8E,EAAA,yDACbkB,EAAiBhG,EAAjBgG,OAAQC,EAASjG,EAATiG,KACZD,IAAWzG,EAFM,oDAGhB0G,EAHgB,iEAQnBhG,QAAQmE,IAAI6B,GARO,SASbvB,EAAIyB,gBAAgBF,GATP,yDAWnBhG,QAAQC,MAAR,MAXmB,0DAAvB,uDAeAgC,EAAO6D,GAAG,QAAQ,SAAC/F,GACEA,EAAXgG,SACOzG,IACfmE,GAAa,GACbc,GAAc,EACda,SAGFnD,EAAO6D,GAAG,QAAQ,SAAC/F,GACjBC,QAAQmE,IAAI,2BAAQf,EAAarD,GACjCsD,EAAe,GAAD,mBAAKD,GAAL,CAAkBrD,SAqEpC0E,EAAIR,iBAAiB,qBAAqB,SAAAlE,GACxCC,QAAQmE,IAAI,YAAaM,EAAI0B,gBACzB1B,EAAI0B,kBAiCR,yBAAKtF,UAAU,OACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,SACb,yBAAKA,UAAU,eACb,2BACEuF,IAAKrD,EACLiB,MAAM,MACND,OAAO,MACPsC,UAAU,IAEZ,2BAAOD,IAAKvD,EAAUmB,MAAM,KAAKD,OAAO,KAAKsC,UAAU,EAAMC,OAAK,KAEpE,yBAAKC,GAAG,aAAa1F,UAAU,cAC7B,kBAAC,IAAD,CACEmD,MAAOd,EACPa,OAAQf,EACRwD,UAAW,GACXC,SAAU,GACVC,YAAa,YAA4B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1B,OACE,yBAAKF,IAAKA,EAAKE,MAAOA,GACnBzD,EAAYwD,QAMvB,kBAAC,IAAD,CACE7F,YAAY,2BACZD,MAAOwC,EACPpC,SAAU,SAAAnB,GAAC,OAAIwD,EAAWxD,EAAEoB,OAAOL,QACnCgG,UA3CR,SAAwB/G,GAEV,UADIA,EAAR4G,KAEN1E,EAAOgD,KAAK,OAAQ3B,GAAS,SAACvD,GAC5BwD,EAAW,IACXF,EAAe,GAAD,mBAAKD,GAAL,CAAkBrD,WAwChC,kBAAC,IAAD,CAAQqB,QA1Fd,WACE2F,UAAUC,aACPC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCC,MAAK,SAAArH,GACA8C,EAAS6C,UACX7C,EAAS6C,QAAQE,UAAY7F,EAC7BsE,EAActE,MAGjBsH,OAAM,SAAAtH,GACLC,QAAQC,MAAMF,QAgFd,wCACA,kBAAC,IAAD,CAAQqB,QA7Ed,WACEa,EAAOgD,KAAK,QAAS3F,EAAUC,GAAU,SAACQ,GACxCwE,EAAcxE,EACdC,QAAQmE,IAAI,uCAAUpE,QA0EpB,4BACA,kBAAC,IAAD,CAAQuH,SAAU9D,EAAWpC,QA1OT,6CA0OpB,W,6CClPFmG,EAA4C,CAChDvD,MAAO,IACPD,OAAQ,KAGWyD,E,YAiEnB,WACUC,EACAC,EACRC,GACC,IAAD,8BACA,+CAJQF,YAGR,EAFQC,cAER,EAhCMzF,OAAuC,KAgC7C,EA9BMwC,IAAgC,KA8BtC,EA5BMmD,YAAuC,KA4B7C,EA1BMC,aAAwC,KA0B9C,EAxBMxD,YAAkC,KAwBxC,EAtBMC,aAAmC,KAsBzC,EApBMhF,SAAmB,GAoBzB,EAlBMC,SAAmB,GAkBzB,EAhBMgF,aAAuB,EAgB7B,EAdMuD,SAAmB,EAczB,EAZMtD,YAAsB,EAY5B,EAVemD,oBAUf,IARMI,WAAqB,EAQ3B,EANMC,YAAsB,EAQ5B,EAAKL,eAAiBM,OAAOC,OAAO,GAAIX,EAAuBI,GAF/D,E,oFAjEAF,EACAC,GAIA,OAFKF,EAAUW,iBACbX,EAAUW,eAAiB,IAAIX,EAAUC,EAAWC,IAC/CF,EAAUW,iB,uCAUKC,GACtBZ,EAAUa,cAAgBD,I,oCAKPE,GACnBd,EAAUe,UAAY1I,KAAK0I,Y,mCAOTC,GAClBhB,EAAUiB,UAAYD,M,qDAyCtB,GAAK3I,KAAK4H,UAAV,CACA,IAAMG,EAAchE,SAAS8E,cAAc,SACrCb,EAAejE,SAAS8E,cAAc,SAHtB,EAII7I,KAAK8H,eAAvB3D,EAJc,EAIdA,MAAOD,EAJO,EAIPA,OACflE,KAAK4H,UAAUkB,aAAa,QAA5B,qCAAmE3E,EAAnE,uBAAuFD,EAAvF,OACA6D,EAAY5D,MAAgB,IAARA,EACpB4D,EAAY7D,OAAkB,IAATA,EACrB6D,EAAYf,MAAM+B,WAAa,OAC/BhB,EAAYf,MAAMgC,SAAW,WAC7BjB,EAAYf,MAAMiC,OAAlB,IACAlB,EAAYf,MAAMkC,MAAlB,IACAnB,EAAYe,aAAa,WAAY,YACrCf,EAAYe,aAAa,OAAQ,QAEjCd,EAAa7D,MAAQA,EACrB6D,EAAa9D,OAASA,EACtB8D,EAAahB,MAAM+B,WAAa,OAChCf,EAAahB,MAAMgC,SAAW,WAC9BhB,EAAac,aAAa,WAAY,YAGtC9I,KAAK+H,YAAcA,EACnB/H,KAAKgI,aAAeA,EACpBhI,KAAK4H,UAAUuB,YAAYnB,GAC3BhI,KAAK4H,UAAUuB,YAAYnB,GAC3BhI,KAAK4H,UAAUuB,YAAYpB,M,6BAMG,IAAD,OAC7B/H,KAAKoJ,gBAGL,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3B,GADApJ,QAAQmE,IAAI,mBAAU,EAAK2D,SACvB,EAAKA,QACPsB,EAAO,wBADT,CAFsC,IAO9Bb,EAAwCf,EAAxCe,UAAWF,EAA6Bb,EAA7Ba,cAAeI,EAAcjB,EAAdiB,UAElC,EAAKxG,OAASC,IAAGqG,EAAWF,GAE5B,EAAK5D,IAAM,IAAIC,kBAAkB+D,GAEjC,EAAKxG,OAAOgC,iBAAiB,WAAW,WACtCkF,OAGF,EAAK1E,IAAIR,iBAAiB,wBAAwB,SAAClE,GACjDC,QAAQmE,IAAI,uBAAwBpE,MAGtC,EAAK0E,IAAIR,iBAAiB,yBAAyB,WAEjD,GADAjE,QAAQmE,IAAI,6BACP,EAAKM,IAAV,CAFuD,IAG/C4E,EAAoB,EAAK5E,IAAzB4E,gBACRrJ,QAAQmE,IAAI,qBAAsBkF,OAGpC,EAAKpH,OAAOgC,iBAAiB,SAAS,kBAAMmF,OAE5C,EAAKE,oBACL,EAAKC,uB,0CAOoB,IAAD,OACrB1J,KAAKoC,SACVpC,KAAKoC,OAAO6D,GC/KQ,WD+KpB,uCAAyB,WAAO/F,GAAP,iBAAA8E,EAAA,yDACfkB,EAAiBhG,EAAjBgG,OAAQC,EAASjG,EAATiG,KAChBhG,QAAQmE,IAAI,kBAASpE,GACjBgG,IAAW,EAAKzG,SAHG,oDAIvB,EAAK0I,YAAa,GACd,EAAKvD,IALc,gCAMf,EAAKA,IAAIwB,qBAAqBD,GANf,OAOjB,EAAK+B,WAAW,EAAK3C,gBAPJ,2CAAzB,kCAAAvF,KAAA,gBAWAA,KAAKoC,OAAO6D,GCvLS,YDuLrB,uCAA0B,WAAO/F,GAAP,iBAAA8E,EAAA,yDAChBkB,EAAiBhG,EAAjBgG,OAAQC,EAASjG,EAATiG,KACZD,IAAW,EAAKzG,SAFI,oDAGnB0G,EAHmB,8DAOlB,EAAKvB,IAPa,gCAOF,EAAKA,IAAIyB,gBAAgBF,GAPvB,yDAStBhG,QAAQC,MAAR,MATsB,0DAA1B,kCAAAJ,KAAA,gBAaAA,KAAKoC,OAAO6D,GCjMI,QDiMK,SAAC/F,GAAkB,IAC9BgG,EAAWhG,EAAXgG,OACJA,IAAW,EAAKzG,WACpB,EAAK2F,KAAK,OAAQc,GAClB,EAAKxB,aAAc,EACnB,EAAKa,uB,uCAOiB,IAAD,OAClBvF,KAAK4E,MACV5E,KAAK4E,IAAIR,iBAAiB,SAAS,SAAAlE,GACjCC,QAAQmE,IAAI,gCAAapE,EAAE4F,SAC3B,IAAMrB,EAAevE,EAAE4F,QAAQ,GAC/B,EAAKrB,aAAeA,EAChB,EAAKuD,cAAgB,EAAKA,aAAajC,YAAc7F,EAAE4F,QAAQ,KACjE,EAAKkC,aAAajC,UAAYtB,MAIlCzE,KAAK4E,IAAIR,iBAAiB,gBAAgB,SAAAlE,GACxC,EAAKkC,QAAU,EAAKA,OAAOgD,KAAK,YAAalF,EAAE8F,iB,4BAStCtG,EAAkBD,GAAoC,IAAD,OAChE,OAAO,IAAI4J,SAAQ,SAACC,EAASC,GAC3B,IAAK,EAAKnH,OAAQ,OAAOmH,EAAO,4BAChC,EAAKnH,OAAOgD,KClOG,QDoOb3F,EACAC,GACA,SAACQ,GACKA,EAAEyJ,SACJ,EAAKlK,SAAWA,EAChB,EAAKC,SAAWA,EAChB,EAAKgF,YAAcxE,EAAEwE,aAErB6E,EAAO,4BAGTpJ,QAAQmE,IAAI,uCAAUpE,W,sCASY,IAAD,OACvC,OAAO,IAAImJ,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAvE,EAAA,+EAET,EAAK4E,kBAFI,uBAIT,EAAKjE,WAJI,UAKfxF,QAAQmE,IAAI,cAAe,EAAKI,cAC5B,EAAKA,YANM,iCAOP,EAAKK,cAPE,gDASP,EAAKM,eATE,QAYfiE,EAAQ,kCAZO,kDAcfC,EAAO,EAAD,IAdS,0DAAZ,2D,6BAsBM,IAAD,OACPvJ,KAAKoC,QACVpC,KAAKoC,OAAOgD,KCpRI,ODoRO,IAAI,SAAClF,GAC1BC,QAAQmE,IAAI,UAAWpE,GACvB,EAAKwE,aAAc,EACnB,EAAKa,qB,8BAQPvF,KAAKkI,WAAY,EACblI,KAAKmI,YAAYnI,KAAKuF,kB,wCAMa,IAAD,OACtC,OAAO,IAAI8D,SAAQ,SAACC,EAASC,GAC3BrC,UAAUC,aACPC,aAAa,EAAKS,aAClBN,MAAK,SAAAsC,GACJ,EAAKrF,YAAcqF,EACf,EAAK9B,cACP,EAAKA,YAAYhC,UAAY8D,GAE/BP,OAED9B,OAAM,SAAAsC,GAAG,OAAIP,EAAOO,W,oCAOc,IAAD,OACtC,OAAI9J,KAAK2E,WAAmB0E,QAAQC,SAAQ,GACrC,IAAID,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAvE,EAAA,kEAEV,EAAKJ,IAFK,yCAEO2E,GAAO,IAFd,uBAGK,EAAK3E,IAAIG,cAHd,UAGTE,EAHS,OAIf,EAAKN,YAAa,GACdM,EAAMC,IALK,kCAMP,EAAKN,IAAIO,oBAAoBF,GANtB,QAOb,EAAK7C,QAAU,EAAKA,OAAOgD,KCvUb,WDuU4BH,GAC1CqE,GAAQ,GARK,0DAWfC,EAAO,EAAD,IAXS,0DAAZ,2D,qCAmBiC,IAAD,OACvC,OAAIvJ,KAAK2E,WAAmB0E,QAAQC,SAAQ,GACrC,IAAID,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAvE,EAAA,kEAEV,EAAKJ,IAFK,yCAEO2E,GAAO,IAFd,uBAGM,EAAK3E,IAAIS,eAHf,UAGTC,EAHS,OAIf,EAAKX,YAAa,GACdW,EAAOJ,IALI,kCAMP,EAAKN,IAAIO,oBAAoBG,GANtB,QAOb,EAAKlD,QAAU,EAAKA,OAAOgD,KC5Vb,WD4V4BE,GAC1CgE,GAAQ,GARK,0DAWfnJ,QAAQC,MAAM,sBAAd,MACAmJ,EAAO,EAAD,IAZS,0DAAZ,2D,iCAoB6B,IAAD,OACnC,OAAO,IAAIF,SAAQ,SAACC,EAASC,GAC3B,IAAK,EAAK/E,YAAa,OAAO+E,GAAO,GACrC,EAAK/E,YAAYgB,YAAYC,SAAQ,SAAAC,GACnC,OAAK,EAAKd,KACL,EAAKJ,aACV,EAAKI,IAAIe,SAASD,EAAO,EAAKlB,kBAC9B8E,GAAQ,IAHcC,GAAO,W,mCAYjCvJ,KAAKoC,OAAS,KACdpC,KAAK4E,IAAM,KACX5E,KAAKkI,WAAY,EACjBlI,KAAK0E,aAAc,I,gCAOf1E,KAAKoC,QAAQpC,KAAKoC,OAAO2H,QACzB/J,KAAK4E,KAAK5E,KAAK4E,IAAImF,QACvB/J,KAAKgK,iB,UA5W8BC,GAAlBtC,EACZW,oB,EADYX,EAYZa,cAA4C,CACjDlG,KAAMJ,EACNK,UAAU,EACVC,cAAc,EACdC,WAAY,CAAC,cAhBIkF,EAuBZe,UAAoB1G,EAvBR2F,EA6BZiB,UAA8B,CACnC9D,cErDJ,IAAIF,EAA4B,KAC5BsF,GAAS,EA4FEC,EA1FQ,WAAO,IACpBzD,EAAO0D,cAAP1D,GACA3D,EAAYhC,cAAZgC,QAFmB,EAGepC,oBAAS,GAHxB,mBAGnB0J,EAHmB,KAGLC,EAHK,OAIO3J,mBAAS,IAJhB,mBAInB4J,EAJmB,KAITC,EAJS,OAKa7J,oBAAS,GALtB,mBAKnB8J,EALmB,KAKNC,EALM,KAMrBC,EAAgB1H,iBAAuB,MANlB,EAOI1D,EAASuD,UAAhCrD,EAPmB,EAOnBA,SAAUC,EAPS,EAOTA,SAsDlB,SAASkL,IACPN,GAAgB,GAQlB,OA7DK7K,GAAaC,GAAUqD,EAAQ,UAEpCsB,qBAAU,WAAO,IACPwB,EAAY8E,EAAZ9E,QACR,GAAKA,EAuBL,OAtBAjB,EAAMiG,EAAcC,kBAAkBjF,EAAS,CAC7CyB,OAAO,EACPD,OAAO,KAGL0D,OACDxD,MAAK,WACJ2C,GAAS,EACT/J,QAAQmE,IAAI,uBAEZM,EAAKoG,YAAY,QAAQ,SAACC,GACxBP,GAAe,GACfF,EAAYS,GACZX,GAAgB,SAInB9C,OAAM,SAACtH,GACNgK,GAAS,EACT/J,QAAQC,MAAM,oBAAqBF,MAGhC,WACLgK,GAAS,EACTtF,GAAOA,EAAIsG,aAEZ,CAACxE,IA+BF,oCACE,yBAAK1F,UAAU,QACb,yBAAKA,UAAU,cAAc0F,GAC7B,yBAAK1F,UAAU,gBAAf,UACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAQO,QA5BlB,WACM2I,GAAUtF,GACZA,EAAIuG,MAAMzL,EAAUD,GACjB8H,MAAK,SAAC0D,GACL9K,QAAQmE,IAAI,sCAEbkD,OAAM,SAAAtH,GACLC,QAAQC,MAAM,yCAqBZ,SACA,kBAAC,IAAD,CAAQmB,QApClB,WACMkJ,GACAP,GAAUtF,GACZA,EAAIwG,QAiCyB3D,SAAUgD,GAAjC,SAEF,yBAAK/D,GAAG,cAAcH,IAAKoE,MAG/B,kBAAC,IAAD,CAAOU,QAAShB,EAAciB,KAlBlC,WACEV,IACIhG,GAAKA,EAAI2G,SAgBoCC,SAAUZ,GACtDL,EADH,8BCjFckB,QACW,cAA7BhK,OAAOC,SAASgK,UAEe,UAA7BjK,OAAOC,SAASgK,UAEhBjK,OAAOC,SAASgK,SAASC,MACvB,2DCVNC,IAASC,OAAO,mBCKD,WACb,IAAMlM,EAAWJ,EAASuD,UAE1B,OADA3C,QAAQmE,IAAI3E,GAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2C,KAAK,IAAIwJ,UAAWC,EAAOC,OAAK,IACvC,kBAAC,IAAD,CAAO1J,KAAK,SAASwJ,UAAWpL,IAChC,kBAAC,IAAD,CAAO4B,KAAK,YAAYwJ,UAAW3B,QDb3B,MAAWpG,SAASkI,eAAe,SDiI7C,kBAAmB/E,WACrBA,UAAUgF,cAAcC,MAAM5E,MAAK,SAAA6E,GACjCA,EAAaC,kB","file":"static/js/main.59b84a2a.chunk.js","sourcesContent":["type Info = {\n\tuserName: string,\n\troomName: string,\n}\n\nclass UserInfo {\n\tstatic instance: UserInfo;\n\n\tprivate info: Info = {\n\t\tuserName: '',\n\t\troomName: '',\n\t};\n\n\tstatic getInstance() {\n\t\tif (!UserInfo.instance) UserInfo.instance = new UserInfo();\n\t\treturn UserInfo.instance;\n\t}\n\n\tconstructor() {\n\t\tconst userInfo = localStorage.getItem('userInfo');\n\t\tif (userInfo) {\n\t\t\ttry {\n\t\t\t\tconst info = JSON.parse(userInfo);\n\t\t\t\tthis.setInfo(info);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('获取本地用户信息失败');\n\t\t\t}\n\t\t}\n\t}\n\n\tsetInfo(info: Info) {\n\t\tthis.info = info;\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(info));\n\t}\n\n\tgetInfo() {\n\t\treturn this.info;\n\t}\n}\n\nconst UserInfoInstance = UserInfo.getInstance();\n\nexport default UserInfoInstance;\n","import React, {useState} from 'react'\nimport { Input, Button, Icon } from 'antd'\nimport { useHistory } from 'react-router';\nimport './login.scss';\nimport UserInfo from '../../userInfo'\n\n\nconst Login: React.FC = () => {\n\tconst [userName, setUserName] = useState('');\n\tconst [roomName, setRoomName] = useState('');\n\tconst history = useHistory();\n\n\tfunction login() {\n\t\tif (!userName || !roomName) return;\n\t\tUserInfo.setInfo({\n\t\t\tuserName,\n\t\t\troomName,\n\t\t});\n\t\thistory.push(`/room/${roomName}`);\n\t\twindow.location.reload();\n\t}\n\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"loginForm\">\n\t\t\t\t<h1>逼格than逼格demo</h1>\n\t\t\t\t<div className=\"form--item\">\n\t\t\t\t\t<Input value={userName} placeholder=\"请输入用户名\" prefix={<Icon type=\"user\" />} onChange={(e) => setUserName(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form--item\">\n\t\t\t\t\t<Input value={roomName} placeholder=\"请输入房间号\" prefix={<Icon type=\"lock\"/>} onChange={(e) => setRoomName(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form--item\">\n\t\t\t\t\t<Button type=\"primary\" onClick={login}>登录</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Login;\n","export default [\n\t{urls:'stun:stun01.sipphone.com'},\n\t{urls:'stun:stun.ekiga.net'},\n\t{urls:'stun:stun.fwdnet.net'},\n\t{urls:'stun:stun.ideasip.com'},\n\t{urls:'stun:stun.iptel.org'},\n\t{urls:'stun:stun.rixtelecom.se'},\n\t{urls:'stun:stun.schlund.de'},\n\t{urls:'stun:stun.l.google.com:19302'},\n\t{urls:'stun:stun1.l.google.com:19302'},\n\t{urls:'stun:stun2.l.google.com:19302'},\n\t{urls:'stun:stun3.l.google.com:19302'},\n\t{urls:'stun:stun4.l.google.com:19302'},\n\t{urls:'stun:stunserver.org'},\n\t{urls:'stun:stun.softjoys.com'},\n\t{urls:'stun:stun.voiparound.com'},\n\t{urls:'stun:stun.voipbuster.com'},\n\t{urls:'stun:stun.voipstunt.com'},\n\t{urls:'stun:stun.voxgratia.org'},\n\t{urls:'stun:stun.xten.com'},\n\t{\n\t\turls: 'turn:numb.viagenie.ca',\n\t\tcredential: 'muazkh',\n\t\tusername: 'webrtc@live.com'\n\t},\n\t{\n\t\turls: 'turn:192.158.29.39:3478?transport=udp',\n\t\tcredential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n\t\tusername: '28224511:1379330808'\n\t},\n\t{\n\t\turls: 'turn:192.158.29.39:3478?transport=tcp',\n\t\tcredential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n\t\tusername: '28224511:1379330808'\n\t},\n]\n","export const { REACT_APP_SOCKET_URL, NODE_ENV } = process.env;\n\nexport const SOCKET_URL = REACT_APP_SOCKET_URL || '';\n\nexport const SOCKET_PATH = NODE_ENV === 'production' ? '/chat/socket.io' : '/socket.io';\n","import React, { useRef, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useHistory } from 'react-router-dom';\nimport { List } from 'react-virtualized';\nimport { Button, Input } from 'antd';\n\nimport './index.scss';\n\nimport iceServers from '../../services/iceServe';\nimport { SOCKET_URL, SOCKET_PATH } from '../../services/config';\nimport UserInfo from '../../userInfo';\n\ntype SdpMsg = SocketMsg<RTCSessionDescription>;\n\ntype CandidateMsg = SocketMsg<RTCPeerConnectionIceEvent>;\n\ntype SocketMsg<T = any> = {\n  data: T;\n  sender: string;\n};\n\nconst socket = io(SOCKET_URL, {\n  path: SOCKET_PATH,\n  forceNew: true,\n  reconnection: false,\n  transports: ['websocket'],\n});\n\nlet isAddWsListener: boolean = false;\nlet isAddRtcListener: boolean = false;\n\nlet localMsgList: string[] = [];\n\nconst App: React.FC = () => {\n  const history = useHistory();\n  const { userName, roomName } = UserInfo.getInfo();\n\n  if (!userName) {\n    history.replace('/login');\n  }\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\n  const [cameraId, setCameraId] = useState('');\n  const [chatHeight, setChatHeight] = useState(0);\n  const [chatWidth, setChatWidth] = useState(0);\n  const [chatMsgList, setChatMsgList] = useState<string[]>(() => localMsgList);\n  const [chatMsg, setChatMsg] = useState('');\n  const [onCalling, setOnCalling] = useState(false);\n\n\n  function handlerWinResize() {\n    const container$ = document.querySelector<HTMLDivElement>('#chat--list');\n    if (!container$) return;\n    const { height, width } = container$.getBoundingClientRect();\n    setChatHeight(height);\n    setChatWidth(width);\n  }\n  window.addEventListener('resize', handlerWinResize);\n  useEffect(() => {\n    console.log('effect');\n    handlerWinResize();\n    return () => window.removeEventListener('resize', handlerWinResize);\n  }, [roomName]);\n\n  let localStream: MediaStream | null = null;\n\n  let remoteStream: MediaStream | null = null;\n\n  let isPublisher: boolean = true;\n\n  let hasPublish: boolean = false;\n\n  const rtc = new RTCPeerConnection({\n    iceServers,\n  });\n\n  function addRtcListener() {\n    if (isAddRtcListener) return;\n    isAddRtcListener = true;\n    rtc.addEventListener('track', e => {\n      const video$ = remoteVideoRef.current;\n      remoteStream = e.streams[0];\n      if (video$ && video$.srcObject !== e.streams[0]) {\n        video$.srcObject = remoteStream;\n      }\n    });\n\n    rtc.addEventListener('icecandidate', e => {\n      socket.emit('candidate', e.candidate);\n    });\n  }\n\n  function addWsListener() {\n    if (isAddWsListener) return;\n    isAddWsListener = true;\n    socket.on('send_sdp', async (e: SdpMsg) => {\n      const { sender, data } = e;\n      console.log('收到sdp', e);\n      if (sender === userName) return;\n      await rtc.setRemoteDescription(data);\n    });\n\n    socket.on('candidate', async (e: CandidateMsg) => {\n      const { sender, data } = e;\n      if (sender === userName) return;\n      if (!data) {\n        // playRemote();\n        return;\n      }\n      try {\n        console.log(data);\n        await rtc.addIceCandidate(data as any);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n\n    socket.on('call', (e: SocketMsg) => {\n      const { sender } = e;\n      if (sender === userName) return;\n      setOnCalling(true);\n      isPublisher = false;\n      publishStream();\n    });\n\n    socket.on('chat', (e: string) => {\n      console.log('收到消息', chatMsgList, e);\n      setChatMsgList([...chatMsgList, e]);\n    });\n  }\n\n  addRtcListener();\n  addWsListener();\n\n  async function createOffer() {\n    if (hasPublish) return;\n    try {\n      const offer = await rtc.createOffer();\n      hasPublish = true;\n      if (offer.sdp) {\n        await rtc.setLocalDescription(offer);\n        socket.emit('send_sdp', offer);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async function createAnswer() {\n    if (hasPublish) return;\n    try {\n      const answer = await rtc.createAnswer();\n      hasPublish = true;\n      if (answer.sdp) {\n        await rtc.setLocalDescription(answer);\n        socket.emit('send_sdp', answer);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  function handlerGetCamera() {\n    navigator.getUserMedia(\n      { video: true },\n      e => {\n        console.log(e);\n        setCameraId(e.id);\n      },\n      e => {\n        console.error(e);\n      },\n    );\n  }\n\n  function getLocalStream() {\n    navigator.mediaDevices\n      .getUserMedia({ audio: true, video: true })\n      .then(e => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = e;\n          localStream = e;\n        }\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  function loginRoom() {\n    socket.emit('login', userName, roomName, (e: boolean) => {\n      isPublisher = e;\n      console.log('是不是发布者', e);\n    });\n  }\n\n  rtc.addEventListener('negotiationneeded', e => {\n    console.log('rtc state', rtc.signalingState);\n    if (rtc.signalingState !== 'stable') return;\n  });\n\n  async function publishStream() {\n    if (!localStream) return;\n    localStream.getTracks().forEach(track => {\n      if (!localStream) return;\n      rtc.addTrack(track, localStream);\n    });\n    if (isPublisher) {\n      await createOffer();\n    } else {\n      await createAnswer();\n    }\n  }\n\n  async function call() {\n    isPublisher = true;\n    await publishStream();\n    socket.emit('call');\n  }\n\n  function handlerKeyDown(e: any) {\n    const { key } = e as KeyboardEvent;\n    if (key === 'Enter') {\n      socket.emit('chat', chatMsg, (e: string) => {\n        setChatMsg('');\n        setChatMsgList([...chatMsgList, e]);\n      });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"left\" />\n      <div className=\"center\" />\n      <div className=\"right\">\n        <div className=\"video--wrap\">\n          <video\n            ref={remoteVideoRef}\n            width=\"200\"\n            height=\"150\"\n            autoPlay={true}\n          />\n          <video ref={videoRef} width=\"80\" height=\"60\" autoPlay={true} muted />\n        </div>\n        <div id=\"chat--list\" className=\"chat--list\">\n          <List\n            width={chatWidth}\n            height={chatHeight}\n            rowHeight={20}\n            rowCount={20}\n            rowRenderer={({ key, index, style }) => {\n              return (\n                <div key={key} style={style}>\n                  {chatMsgList[index]}\n                </div>\n              );\n            }}\n          />\n        </div>\n        <Input\n          placeholder=\"说点什么\"\n          value={chatMsg}\n          onChange={e => setChatMsg(e.target.value)}\n          onKeyDown={handlerKeyDown}\n        />\n        <Button onClick={getLocalStream}>采集本地视频</Button>\n        <Button onClick={loginRoom}>登录房间</Button>\n        <Button disabled={onCalling} onClick={call}>\n          call\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/**\r\n * webrtc sdk\r\n * copyright 邢毅彪\r\n */\r\nimport emitter from 'eventemitter3';\r\nimport io from 'socket.io-client';\r\nimport 'webrtc-adapter';\r\n\r\nimport { SOCKET_PATH, SOCKET_URL } from './config';\r\nimport iceServers from './iceServe';\r\nimport { SEND_SDP, CALL, CANDIDATE, LOGIN } from './event.type';\r\n\r\ntype SocketMsg<T = any> = {\r\n  data: T;\r\n  sender: string;\r\n};\r\n\r\ntype SdpMsg = SocketMsg<RTCSessionDescription>;\r\ntype CandidateMsg = SocketMsg<RTCPeerConnectionIceEvent>;\r\n\r\ninterface ContainerStyleType {\r\n  width: number,\r\n  height: number,\r\n}\r\n\r\nconst DefaultContainerStyle: ContainerStyleType = {\r\n  width: 200,\r\n  height: 200,\r\n};\r\n\r\nexport default class RTCClient extends emitter {\r\n  static clientInstance: RTCClient;\r\n\r\n  static getClientInstance(\r\n    container: HTMLDivElement,\r\n    constraints: MediaStreamConstraints,\r\n  ): RTCClient {\r\n    if (!RTCClient.clientInstance)\r\n      RTCClient.clientInstance = new RTCClient(container, constraints);\r\n    return RTCClient.clientInstance;\r\n  }\r\n\r\n  static socketOptions: SocketIOClient.ConnectOpts = {\r\n    path: SOCKET_PATH,\r\n    forceNew: true,\r\n    reconnection: false,\r\n    transports: ['websocket'],\r\n  };\r\n\r\n  static setSocketOptions(options: SocketIOClient.ConnectOpts) {\r\n    RTCClient.socketOptions = options;\r\n  }\r\n\r\n  static socketUrl: string = SOCKET_URL;\r\n\r\n  static setScocketUrl(url: string) {\r\n    RTCClient.socketUrl = this.socketUrl;\r\n  }\r\n\r\n  static rtcConfig: RTCConfiguration = {\r\n    iceServers,\r\n  };\r\n\r\n  static setRtcConfig(config: RTCConfiguration) {\r\n    RTCClient.rtcConfig = config;\r\n  }\r\n\r\n  private socket: SocketIOClient.Socket | null = null;\r\n\r\n  private rtc: RTCPeerConnection | null = null;\r\n\r\n  private localVideo$: HTMLVideoElement | null = null;\r\n\r\n  private remoteVideo$: HTMLVideoElement | null = null;\r\n\r\n  private localStream: MediaStream | null = null;\r\n\r\n  private remoteStream: MediaStream | null = null;\r\n\r\n  private userName: string = '';\r\n\r\n  private roomName: string = '';\r\n\r\n  private isPublisher: boolean = false;\r\n\r\n  private hasInit: boolean = false;\r\n\r\n  private hasPublish: boolean = false;\r\n\r\n  private readonly containerStyle!: ContainerStyleType;\r\n\r\n  private agreeCall: boolean = false;\r\n\r\n  private receiveSap: boolean = false;\r\n\r\n  constructor(\r\n    private container: HTMLDivElement,\r\n    private constraints: MediaStreamConstraints,\r\n    containerStyle?: ContainerStyleType\r\n  ) {\r\n    super();\r\n    this.containerStyle = Object.assign({}, DefaultContainerStyle, containerStyle);\r\n  }\r\n\r\n  private initContainer() {\r\n    if (!this.container) return;\r\n    const localVideo$ = document.createElement('video');\r\n    const remoteVideo$ = document.createElement('video');\r\n    const { width, height } = this.containerStyle;\r\n    this.container.setAttribute('style', `position: relative; width: ${width}px; height: ${height}px`);\r\n    localVideo$.width = width * 0.25;\r\n    localVideo$.height = height * 0.25;\r\n    localVideo$.style.background = '#999';\r\n    localVideo$.style.position = 'absolute';\r\n    localVideo$.style.bottom = `0`;\r\n    localVideo$.style.right = `0`;\r\n    localVideo$.setAttribute('autoPlay', 'autoPlay');\r\n    localVideo$.setAttribute('mute', 'mute');\r\n\r\n    remoteVideo$.width = width;\r\n    remoteVideo$.height = height;\r\n    remoteVideo$.style.background = '#000';\r\n    remoteVideo$.style.position = 'absolute';\r\n    remoteVideo$.setAttribute('autoPlay', 'autoPlay');\r\n\r\n\r\n    this.localVideo$ = localVideo$;\r\n    this.remoteVideo$ = remoteVideo$;\r\n    this.container.appendChild(remoteVideo$);\r\n    this.container.appendChild(remoteVideo$);\r\n    this.container.appendChild(localVideo$);\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   */\r\n  public init(): Promise<string> {\r\n    this.initContainer();\r\n\r\n    const that = this;\r\n    return new Promise((resolve, reject) => {\r\n      console.log('开始init', this.hasInit);\r\n      if (this.hasInit) {\r\n        reject('重复init');\r\n        return;\r\n      }\r\n\r\n      const { socketUrl, socketOptions, rtcConfig } = RTCClient;\r\n\r\n      this.socket = io(socketUrl, socketOptions);\r\n\r\n      this.rtc = new RTCPeerConnection(rtcConfig);\r\n\r\n      this.socket.addEventListener('connect', () => {\r\n        resolve();\r\n      });\r\n\r\n      this.rtc.addEventListener('signalingstatechange', (e) => {\r\n        console.log('signalingstatechange', e);\r\n      });\r\n\r\n      this.rtc.addEventListener('connectionstatechange', () => {\r\n        console.log('rtc connectionStateChange');\r\n        if (!this.rtc) return;\r\n        const { connectionState } = this.rtc;\r\n        console.log('connectionState %s', connectionState);\r\n      });\r\n\r\n      this.socket.addEventListener('error', () => reject());\r\n\r\n      this.addSocketListener();\r\n      this.addRtcListener();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加socket监听\r\n   */\r\n  private addSocketListener() {\r\n    if (!this.socket) return;\r\n    this.socket.on(SEND_SDP, async (e: SdpMsg) => {\r\n      const { sender, data } = e;\r\n      console.log('收到sdp', e);\r\n      if (sender === this.userName) return;\r\n      this.receiveSap = true;\r\n      if (this.rtc) {\r\n        await this.rtc.setRemoteDescription(data);\r\n        if (this.agreeCall) this.publishStream();\r\n      }\r\n    });\r\n\r\n    this.socket.on(CANDIDATE, async (e: CandidateMsg) => {\r\n      const { sender, data } = e;\r\n      if (sender === this.userName) return;\r\n      if (!data) {\r\n        return;\r\n      }\r\n      try {\r\n        if (this.rtc) await this.rtc.addIceCandidate(data as any);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    });\r\n\r\n    this.socket.on(CALL, (e: SocketMsg) => {\r\n      const { sender } = e;\r\n      if (sender === this.userName) return;\r\n      this.emit('call', sender);\r\n      this.isPublisher = false;\r\n      this.publishStream();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加rtc监听\r\n   */\r\n  private addRtcListener() {\r\n    if (!this.rtc) return;\r\n    this.rtc.addEventListener('track', e => {\r\n      console.log('远端track增加', e.streams);\r\n      const remoteStream = e.streams[0];\r\n      this.remoteStream = remoteStream;\r\n      if (this.remoteVideo$ && this.remoteVideo$.srcObject !== e.streams[0]) {\r\n        this.remoteVideo$.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    this.rtc.addEventListener('icecandidate', e => {\r\n      this.socket && this.socket.emit('candidate', e.candidate);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 登录房建\r\n   * @param roomName\r\n   * @param userName\r\n   */\r\n  public login(roomName: string, userName: string): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.socket) return reject('socket未连接');\r\n      this.socket.emit(\r\n        LOGIN,\r\n        userName,\r\n        roomName,\r\n        (e: { success: boolean; isPublisher: boolean }) => {\r\n          if (e.success) {\r\n            this.userName = userName;\r\n            this.roomName = roomName;\r\n            this.isPublisher = e.isPublisher;\r\n          } else {\r\n            reject('登录失败');\r\n          }\r\n          // isPublisher = e;\r\n          console.log('是不是发布者', e);\r\n        },\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 发布流\r\n   */\r\n  private publishStream(): Promise<string> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        await this.initLocalStream();\r\n\r\n        await this.addTrack();\r\n        console.log('isPublisher', this.isPublisher);\r\n        if (this.isPublisher) {\r\n          await this.createOffer();\r\n        } else {\r\n          await this.createAnswer();\r\n        }\r\n\r\n        resolve('发布流成功');\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 发起通话请求\r\n   */\r\n  public call() {\r\n    if (!this.socket) return;\r\n    this.socket.emit(CALL, '', (e: SocketMsg) => {\r\n      console.log('call cb', e);\r\n      this.isPublisher = true;\r\n      this.publishStream();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 接受通话请求\r\n   */\r\n  public agree() {\r\n    this.agreeCall = true;\r\n    if (this.receiveSap) this.publishStream();\r\n  }\r\n\r\n  /**\r\n   * 初始化本地视频\r\n   */\r\n  private initLocalStream(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.mediaDevices\r\n        .getUserMedia(this.constraints)\r\n        .then(stream => {\r\n          this.localStream = stream;\r\n          if (this.localVideo$) {\r\n            this.localVideo$.srcObject = stream;\r\n          }\r\n          resolve();\r\n        })\r\n        .catch(err => reject(err));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * create offer\r\n   */\r\n  private createOffer(): Promise<boolean> {\r\n    if (this.hasPublish) return Promise.resolve(true);\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        if (!this.rtc) return reject(false);\r\n        const offer = await this.rtc.createOffer();\r\n        this.hasPublish = true;\r\n        if (offer.sdp) {\r\n          await this.rtc.setLocalDescription(offer);\r\n          this.socket && this.socket.emit(SEND_SDP, offer);\r\n          resolve(true);\r\n        }\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * create answer\r\n   */\r\n  private createAnswer(): Promise<boolean> {\r\n    if (this.hasPublish) return Promise.resolve(true);\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        if (!this.rtc) return reject(false);\r\n        const answer = await this.rtc.createAnswer();\r\n        this.hasPublish = true;\r\n        if (answer.sdp) {\r\n          await this.rtc.setLocalDescription(answer);\r\n          this.socket && this.socket.emit(SEND_SDP, answer);\r\n          resolve(true);\r\n        }\r\n      } catch (e) {\r\n        console.error('create answer error', e);\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加track\r\n   */\r\n  private addTrack(): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.localStream) return reject(false);\r\n      this.localStream.getTracks().forEach(track => {\r\n        if (!this.rtc) return reject(false);\r\n        if (!this.localStream) return reject(false);\r\n        this.rtc.addTrack(track, this.localStream);\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 重置关键状态\r\n   */\r\n  private resetState() {\r\n    this.socket = null;\r\n    this.rtc = null;\r\n    this.agreeCall = false;\r\n    this.isPublisher = false;\r\n  }\r\n\r\n  /**\r\n   * destroy\r\n   */\r\n  public destroy() {\r\n    if (this.socket) this.socket.close();\r\n    if (this.rtc) this.rtc.close();\r\n    this.resetState();\r\n  }\r\n}\r\n","/**\r\n * socket信令定义文件\r\n */\r\n\r\n// 发送sdp\r\nexport const SEND_SDP = 'send_sdp';\r\n\r\n// 发送ice信息\r\nexport const CANDIDATE = 'candidate';\r\n\r\n// call\r\nexport const CALL = 'call';\r\n\r\n// login\r\nexport const LOGIN = 'login';\r\n\r\nexport default {};\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Button, Modal } from 'antd';\r\n\r\nimport UserInfo from '../../userInfo';\r\nimport WebRtcService from '../../services/webrtc.service';\r\n\r\nlet rtc: WebRtcService | null = null;\r\nlet isInit = false;\r\n\r\nconst Room: React.FC = () => {\r\n  const { id } = useParams();\r\n  const { replace } = useHistory();\r\n  const [ modalVisible, setModalVisible ] = useState(false);\r\n  const [ callName, setCallName ] = useState('');\r\n  const [ callDisable, setCallDisable ] = useState(false);\r\n  const videoWrapRef$ = useRef<HTMLDivElement>(null);\r\n  const { userName, roomName } = UserInfo.getInfo();\r\n\r\n  if (!userName || !roomName) replace('/login');\r\n\r\n  useEffect(() => {\r\n    const { current } = videoWrapRef$;\r\n    if (!current) return;\r\n    rtc = WebRtcService.getClientInstance(current, {\r\n      video: true,\r\n      audio: true,\r\n    });\r\n\r\n    rtc.init()\r\n      .then(() => {\r\n        isInit = true;\r\n        console.log('webRtc init success');\r\n\r\n        rtc!.addListener('call', (name) => {\r\n          setCallDisable(true);\r\n          setCallName(name);\r\n          setModalVisible(true);\r\n        })\r\n\r\n      })\r\n      .catch((e) => {\r\n        isInit = false;\r\n        console.error('webRrc init error', e);\r\n      });\r\n\r\n    return () => {\r\n      isInit = false;\r\n      rtc && rtc.destroy();\r\n    }\r\n  }, [id]);\r\n\r\n  function call() {\r\n    if (callDisable) return;\r\n    if (isInit && rtc) {\r\n      rtc.call();\r\n    }\r\n  }\r\n\r\n  function login() {\r\n    if (isInit && rtc) {\r\n      rtc.login(roomName, userName)\r\n        .then((name) => {\r\n          console.log('webrtc 登录成功')\r\n        })\r\n        .catch(e => {\r\n          console.error('webrtc登录失败 e')\r\n        })\r\n    }\r\n  }\r\n\r\n  function closeModal() {\r\n    setModalVisible(false);\r\n  }\r\n\r\n  function agreeCall() {\r\n    closeModal();\r\n    if (rtc) rtc.agree();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"room\">\r\n        <div className=\"room--left\">{id}</div>\r\n        <div className=\"room--middle\">middle</div>\r\n        <div className=\"room--right\">\r\n          <div className=\"btn__list\">\r\n            <Button onClick={login}>login</Button>\r\n            <Button onClick={call} disabled={callDisable}>call</Button>\r\n          </div>\r\n          <div id=\"video--wrap\" ref={videoWrapRef$} />\r\n        </div>\r\n      </div>\r\n      <Modal visible={modalVisible} onOk={agreeCall} onCancel={closeModal}>\r\n        {callName} call you, Do you agree?\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'webrtc-adapter';\nimport 'antd/dist/antd.css';\n\nimport Route from './router'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Route />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n// import App from './App';\nimport UserInfo from './userInfo';\nimport Login from './views/login/Login';\nimport Index from './views/home/Index';\nimport Room from './views/room/room';\n\nexport default function() {\n  const userInfo = UserInfo.getInfo();\n  console.log(userInfo);\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Index} exact/>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/room/:id\" component={Room} />\n      </Switch>\n    </Router>\n  );\n}\n"],"sourceRoot":""}